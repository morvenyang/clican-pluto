DPL使用手册

= DPL使用手册 =

===DPL交互接口===

所有的和DPL模块的交互方式的唯一接口就是DplStatement,通过一个String的dpl参数和一个Map(List和常量的存放的Map)来进行数据运算和关联。


一共有4个重构接口。主要的参数请参见下表:
||参数名||参数名描述||
||dpl||类似于sql的一个字符串，用于数据处理的一个描述字符串类似于select userList.name,userList.password from userList where userList.id=1 or userList.id = dual.id||
||PorcessorContext||用于dpl数据处理的一个Map对象,其中包含了userList之类的集合变量用于from,还包含了dual.id这类的常量用于常量替换。||
||Map<String,Object>||功用和ProcessorContext一样,只是一个简单的函数复载
Clazz<T>用于dpl返回List内保存的对象的类型转换,通过这个参数可以把Map对象转换为T对象。前提就是Map中的key需要和T对象的属性能够名称上对应上。||

{{{
/**
 * The Clican-Pluto software suit is Copyright 2009, Clican Company and individual contributors, and is licensed under the GNU LGPL.
 *
 * @author clican
 *
 */
package com.clican.pluto.dataprocess.dpl;

import java.util.List;
import java.util.Map;

import com.clican.pluto.dataprocess.engine.ProcessorContext;
import com.clican.pluto.dataprocess.exception.DplException;

/**
 * Date Process Language的处理类，该类的实现接口可以用来根据dpl描述的查询语句
 * <code>ProcessorContext</code>的上下文中把希望获得的数据各类where条件、group by条件order
 * by条件再经过各个calculation计算获得结果。
 * 
 * @author clican
 * 
 */
public interface DplStatement {

	/**
	 * 
	 * @param <T>
	 * @param dpl
	 *            dpl data process language
	 * @param context
	 *            数据来源的上下文
	 * @param clazz
	 *            把查询得到的结果转换为该数据类型，要求必须查询结果的as名称和他的property
	 *            name完全一致。该clazz必须有一个没有参数的构造函数。
	 * @return
	 * @throws DplException
	 *             如果在解析dpl或执行dpl的过程中出现错误则抛出该异常
	 */
	public <T> List<T> execute(String dpl, ProcessorContext context, Class<T> clazz) throws DplException;

	/**
	 * 
	 * @param dpl
	 *            data process language
	 * @param context
	 *            数据来源的上下文
	 * @return
	 * @throws DplException
	 *             如果在解析dpl或执行dpl的过程中出现错误则抛出该异常
	 */
	public List<Map<String, Object>> execute(String dpl, ProcessorContext context) throws DplException;

	/**
	 * 
	 * @param <T>
	 * @param dpl
	 *            data process language
	 * @param context
	 *            数据来源的上下文
	 * @param clazz
	 *            把查询得到的结果转换为该数据类型，要求必须查询结果的as名称和他的property
	 *            name完全一致。该clazz必须有一个没有参数的构造函数。
	 * @return
	 * @throws DplException
	 */
	public <T> List<T> execute(String dpl, Map<String, Object> context, Class<T> clazz) throws DplException;

	/**
	 * 
	 * @param dpl
	 *            data process language
	 * @param context
	 *            数据来源的上下文
	 * @return
	 * @throws DplException
	 */
	public List<Map<String, Object>> execute(String dpl, Map<String, Object> context) throws DplException;

}

// $Id: DplStatement.java 13278 2010-05-26 11:29:38Z wei.zhang $
}}}
= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages