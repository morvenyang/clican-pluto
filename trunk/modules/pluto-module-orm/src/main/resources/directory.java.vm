/**
 * The Clican-Pluto software suit is Copyright 2009, Clican Company
 * and individual contributors, and is licensed under the GNU LGPL.
 *
 * @author clican
 *
 */
 package com.clican.pluto.orm.model.dynamic;
 
import java.util.Calendar;
import java.util.Set;

import javax.persistence.*;

import com.clican.pluto.orm.annotation.DynamicDirectory;
import com.clican.pluto.orm.annotation.DynamicClass;
import com.clican.pluto.orm.annotation.DynamicModelSet;

import com.clican.pluto.orm.dynamic.inter.IDirectory;
import com.clican.pluto.orm.dynamic.inter.ITemplateDirectorySiteRelation;
import com.clican.pluto.orm.model.*;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@DynamicClass
@DynamicDirectory
@Entity(name="Directory")
@Table(name = "DIRECTORY")
public class Directory implements IDirectory {

	private static final long serialVersionUID = 1L;
	
	private Long id;
	
	private IDirectory parent;
	
	private Set<IDirectory> children;
	
	private String path;
	
	private String name;
	
	private IDirectory reference;
	
	private Calendar createTime;
	
	private Calendar updateTime;
	
	private int issueMode;
	
	private Set<ITemplateDirectorySiteRelation> templateDirectorySiteRelationSet;
	
	#foreach( $modelDescription in $modelDescriptionList )
	
	private Set<${modelDescription.firstCharUpperName}> ${modelDescription.firstCharLowerName}Set; 
	#end
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "ID")
	public Long getId(){
		return id;
	}
	
	public void setId(Long id){
		this.id = id;
	}
	
	@ManyToOne(targetEntity=Directory.class)
	@JoinColumn(name = "PARENT_ID", nullable = true)
	public IDirectory getParent(){
		return parent;
	}
	
	public void setParent(IDirectory parent){
		this.parent = parent;
	}
	
	@OneToMany(mappedBy = "parent", cascade = CascadeType.ALL, fetch = FetchType.EAGER,targetEntity=Directory.class)
	public Set<IDirectory> getChildren(){
		return children;
	}
	
	public void setChildren(Set<IDirectory> children){
		this.children = children;
	}
	
	@OneToMany(mappedBy = "directory", cascade = CascadeType.ALL, fetch = FetchType.LAZY,targetEntity=TemplateDirectorySiteRelation.class)
    public Set<ITemplateDirectorySiteRelation> getTemplateDirectorySiteRelationSet() {
        return templateDirectorySiteRelationSet;
    }

    public void setTemplateDirectorySiteRelationSet(Set<ITemplateDirectorySiteRelation> templateDirectorySiteRelationSet) {
        this.templateDirectorySiteRelationSet = templateDirectorySiteRelationSet;
    }
	
	@Column(name = "PATH")
	public String getPath(){
		return path;
	}
	
	public void setPath(String path){
		this.path = path;
	}
	
	@Column(name = "NAME")
	public String getName(){
		return name;
	}
	
	public void setName(String name){
		this.name = name;
	}
	
	@ManyToOne(fetch = FetchType.LAZY,targetEntity=Directory.class)
	@JoinColumn(name = "REFERENCE_ID", nullable = true)
	public IDirectory getReference(){
		return reference;
	}
	
	public void setReference(IDirectory reference){
		this.reference = reference;
	}
	
	@Column(name = "CREATE_TIME")
	public Calendar getCreateTime(){
		return createTime;
	}
	
	public void setCreateTime(Calendar createTime){
		this.createTime = createTime;
	}
	
	@Column(name = "UPDATE_TIME")
	public Calendar getUpdateTime(){
		return updateTime;
	}
	
	public void setUpdateTime(Calendar updateTime){
		this.updateTime = updateTime;
	}
	
	@Column(name = "ISSUE_MODE")
	public int getIssueMode(){
		return issueMode;
	}
	
	public void setIssueMode(int issueMode){
		this.issueMode = issueMode;
	}
	
	#foreach( $modelDescription in $modelDescriptionList )
	
	@OneToMany(mappedBy = "parent", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@DynamicModelSet(modelName = "${modelDescription.name}" )
	public Set<${modelDescription.firstCharUpperName}> get${modelDescription.firstCharUpperName}Set(){
		return ${modelDescription.firstCharLowerName}Set;
	}
	
	public void set${modelDescription.firstCharUpperName}Set(Set<${modelDescription.firstCharUpperName}> ${modelDescription.firstCharLowerName}Set){
		this.${modelDescription.firstCharLowerName}Set = ${modelDescription.firstCharLowerName}Set;
	}
	#end
	
	public String toString() {
		ToStringBuilder builder = new ToStringBuilder(this);
		builder.append("id", this.id);
		builder.append("path" , this.path);
		return builder.toString();
	}
	
	public int hashCode() {
		HashCodeBuilder builder = new HashCodeBuilder();
		builder.append(this.id);
		builder.append(this.path);
		return builder.toHashCode();
	}
	
	public boolean equals(Object object) {
		if (!(object instanceof Directory)) {
			return false;
		}
		Directory rhs = (Directory) object;
		EqualsBuilder builder = new EqualsBuilder();
		builder.append(id, rhs.getId());
		builder.append(path,rhs.getPath());
		return builder.isEquals();
	}
}