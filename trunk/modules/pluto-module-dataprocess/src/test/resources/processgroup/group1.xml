<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dataprocess="http://www.clican.com/spring/dataprocess"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.clican.com/spring/dataprocess
http://www.clican.com/spring/dataprocess.xsd">

	<dataprocess:params id="prepareParam"
		nextDataProcessors="loadTestA" startProcessor="true">
		<dataprocess:param paramName="var1" paramValue="1"
			type="int" />
	</dataprocess:params>

	<dataprocess:ibatis id="loadTestA"
		nextDataProcessors="loadTestB" sqlMapClient="sqlMapClient">
		<dataprocess:exec statement="Test.selectTestA"
			ibatisExecType="select_list" resultName="testAList" />
	</dataprocess:ibatis>

	<dataprocess:ibatis id="loadTestB"
		nextDataProcessors="loadTestA2" sqlMapClient="sqlMapClient">
		<dataprocess:exec statement="Test.selectTestB"
			ibatisExecType="select_list" resultName="testBList" />
	</dataprocess:ibatis>

	<dataprocess:jdbc id="loadTestA2" jdbcTemplate="jdbcTemplate"
		nextDataProcessors="processData, processMapData">
		<dataprocess:exec resultName="testAList2"
			clazz="com.clican.pluto.dataprocess.testbean.BeanA">
			select * from TestA
		</dataprocess:exec>
	</dataprocess:jdbc>

	<dataprocess:mvel id="processData" nextDataProcessors="insertTestC, collectionIterator"
		resultName="testCList">
		<![CDATA[
				java.util.List testCList = new java.util.ArrayList();
				com.clican.pluto.dataprocess.testbean.BeanA testA;
				com.clican.pluto.dataprocess.testbean.BeanB testB;
				foreach (testA : testAList) {
   					com.clican.pluto.dataprocess.testbean.BeanC testC= new com.clican.pluto.dataprocess.testbean.BeanC();
   					testC.setName(testA.getName());
   					testCList.add(testC);
				}
				foreach (testB : testBList) {
   					com.clican.pluto.dataprocess.testbean.BeanC testC= new com.clican.pluto.dataprocess.testbean.BeanC();
   					testC.setName(testB.getName());
   					testCList.add(testC);
				}
				return testCList;
				]]>
	</dataprocess:mvel>

	<dataprocess:collectionIterator id="collectionIterator"
		collectionName="testCList" elementName="input" iteratorProcessors="stdOutDump" />

	<dataprocess:mvel id="processMapData"
		nextDataProcessors="mapIterator" resultName="testMap">
		<![CDATA[
				java.util.HashMap map = new java.util.HashMap();
				
				map.put("a", "A");
				map.put("b", "B");
				
				System.out.println("dumping map data: " + map);
				
				return map;
				]]>
	</dataprocess:mvel>

	<dataprocess:mapIterator id="mapIterator"
		mapName="testMap" elementName="input" iteratorProcessors="stdOutDump" />


	<dataprocess:ibatis id="insertTestC" sqlMapClient="sqlMapClient"
		nextDataProcessors="testDplExec1">
		<dataprocess:exec statement="Test.insertTestC"
			ibatisExecType="insert" batch="true" paramName="testCList" />
	</dataprocess:ibatis>

	<bean id="usedInTestBeanExec" class="java.lang.String" />


	<dataprocess:dpl id="testDplExec1" resultName="temp"
		nextDataProcessors="testDplExec2">
		<![CDATA[
			select testAList.name as name from testAList
		]]>
	</dataprocess:dpl>

	<dataprocess:dpl id="testDplExec2" resultName="temp2"
		nextDataProcessors="testDplExec3" traces="name,doubleValue,tileRank">
		<![CDATA[
			select testAList.name as name, testAList.doubleValue as doubleValue, NTile(5, testAList.name, asc) as tileRank from testAList
		]]>
	</dataprocess:dpl>

	<dataprocess:dpl id="testDplExec3" resultName="temp3"
		traces="name,doubleValue,percentileRank">
		<![CDATA[
			select testAList.name as name, testAList.doubleValue as doubleValue, PercentileRank(5, testAList.doubleValue, desc) as percentileRank from testAList
		]]>
	</dataprocess:dpl>

	<dataprocess:partition id="partitionTest"
		serviceName="test" partitionListName="temp2" outputVarName="temp2"
		partitionProcessors="collectionIterator2">
	</dataprocess:partition>

	<dataprocess:collectionIterator id="collectionIterator2"
		collectionName="temp2" elementName="input" iteratorProcessors="checkVar1" />

	<dataprocess:condition id="checkVar1">
		<dataprocess:cond expr="var1==1" nextDataProcessor="stdOutDump" />
		<dataprocess:cond expr="var1&gt;1" nextDataProcessor="writeExcel" />
	</dataprocess:condition>

	<dataprocess:mvel id="stdOutDump">
		<![CDATA[
				System.out.println("dataprocess dump: " + input);
				]]>
	</dataprocess:mvel>

	<dataprocess:mvel id="stdOutDump2">
		<![CDATA[
				System.out.println("dataprocess dump: ");
				]]>
	</dataprocess:mvel>

	<dataprocess:excel id="writeExcel">
		<dataprocess:write paramName="testAList"
			resource="target/1.xls" sheetName="sheet1" columns="id" />
	</dataprocess:excel>


</beans>